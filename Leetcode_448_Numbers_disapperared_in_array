//JAVA SOLUTION

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        Set<Integer> set = new HashSet<>();
        for(int val : nums){
            set.add(val);
        }
        
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=1; i<= nums.length ; i++){
            if(!set.contains(i)){
                list.add(i);
            }
        }
        return list;
    }
}

// 2nd APPROACH
class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        int i=0; 
        while(i<nums.length){
            int correct = nums[i] - 1;

            if(nums[i] != nums[correct]){
                swap(nums, i, correct);
            }else{
                i++;
            }
        }

        // find the missing number
        List<Integer> list = new ArrayList<>();
        for(int j=0; j<nums.length; j++){
            if(nums[j] != (j+1)){
                list.add(j+1);
            }
        }
        return list;
    }

    void swap(int []nums, int first, int second){
        int temp = nums[first];
        nums[first] = nums[second];
        nums[second] = temp;
    }
}
